package View;

import Controller.DBConnection;
import Controller.ExceptionManager;
import Model.User;
import javax.swing.JPanel;

public final class MainFrame extends javax.swing.JFrame {

    // Variables para los paneles:
    private final static MainFrame mainFrame = new MainFrame();
    private static Login loginPanel;
    private static About aboutPanel;
    private static NewTransaction newTransactionPanel;
    private static Orders ordersPanel;
    private static Profile profilePanel;
    private static boolean userAccess = false;
    private static boolean isAdmin = false;
    private static User user;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();

        // Validamos la conexión a la base de datos
        DBConnection.validateCon();

        // Usamos referencias propias de los paneles para acceder a variables
        // y métodos no estáticos.
        loginPanel = Login.getPane();
        aboutPanel = new About();
        newTransactionPanel = NewTransaction.getPane();
        ordersPanel = Orders.getPane();
        profilePanel = Profile.getPane();

        // Desactivar botones que no se usan hasta estar logeado.
        MainFrame.login.setEnabled(false);
        MainFrame.newTransaction.setEnabled(false);
        MainFrame.orders.setEnabled(false);
        MainFrame.profile.setEnabled(false);

        // Mostrar el panel de Login.
        Login.init();
        this.setContentPane(loginPanel);
        this.pack();
    }

    // <editor-fold defaultstate="collapsed" desc="Métodos para cambiar paneles"> 
    public void changePanel(JPanel panel) {
        mainFrame.setContentPane(panel);
        mainFrame.pack();
    }

    public static MainFrame getMainFrame() {
        return mainFrame;
    }

    public static Login getLoginPanel() {
        return loginPanel;
    }

    public static About getAboutPanel() {
        return aboutPanel;
    }

    public static NewTransaction getNewTransactionPanel() {
        return newTransactionPanel;
    }

    public static Orders getOrdersPanel() {
        return ordersPanel;
    }

    public static Profile getProfilePanel() {
        return profilePanel;
    }

    public static void changeUserAccess(boolean b) {
        mainFrame.setUserAccess(b);
    }

    public void setUserAccess(boolean b) {
        MainFrame.userAccess = b;
    }

    public static boolean getUserAccess() {
        return MainFrame.userAccess;
    }

    public static void setAdmin(boolean b) {
        MainFrame.isAdmin = b;
    }

    public static boolean isAdmin() {
        return MainFrame.isAdmin;
    }

    public static void setUser(User usr) {
        MainFrame.user = usr;
    }

    public static User getUser() {
        return MainFrame.user;
    }

    // </editor-fold>
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar = new javax.swing.JMenuBar();
        login = new javax.swing.JMenu();
        profile = new javax.swing.JMenu();
        closeSession = new javax.swing.JMenuItem();
        orders = new javax.swing.JMenu();
        newTransaction = new javax.swing.JMenu();
        about = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DaviiExpress");

        login.setText("Login");
        login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginMouseClicked(evt);
            }
        });
        menuBar.add(login);

        profile.setText("My Profile");
        profile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileMouseClicked(evt);
            }
        });

        closeSession.setText("Close Session");
        closeSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeSessionActionPerformed(evt);
            }
        });
        profile.add(closeSession);

        menuBar.add(profile);

        orders.setText("Orders");
        orders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ordersMouseClicked(evt);
            }
        });
        menuBar.add(orders);

        newTransaction.setText("New Transaction");
        newTransaction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newTransactionMouseClicked(evt);
            }
        });
        menuBar.add(newTransaction);

        about.setText("About");
        about.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutMouseClicked(evt);
            }
        });
        menuBar.add(about);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 377, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="Event Listeners">
    private void aboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMouseClicked
        // Cambia el panel de contenido al panel About.
        if (about.isEnabled()) {
            changePanel(MainFrame.getAboutPanel());
            MainFrame.login.setEnabled(!MainFrame.getUserAccess());
            MainFrame.profile.setEnabled(userAccess);
            MainFrame.newTransaction.setEnabled((userAccess ^ isAdmin) && userAccess);
            MainFrame.orders.setEnabled(userAccess);
            MainFrame.about.setEnabled(false);
        }
    }//GEN-LAST:event_aboutMouseClicked

    private void loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginMouseClicked
        // Cambia el panel del MainFrame al panel About.
        if (login.isEnabled()) {
            changePanel(MainFrame.getLoginPanel());
            MainFrame.login.setEnabled(false);
            MainFrame.about.setEnabled(true);
        }
    }//GEN-LAST:event_loginMouseClicked

    private void profileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMouseClicked
        // Desactivamos este menú y activamos los demás (menos login)
        /*
        Queremos que se tenga acceso al menú New Transaction sólo cuando 
        isAdmin es True.
        Para ello usamos en conjunto una XOR y un NOT, relacionados con una AND, 
        para que la tabla de verdad quede tal que:
        
    userAccess | isAdmin | userAccess^isAdmin | (userAccess^isAdmin) && userAccess
    ----------------------------------------------------------------------------
        0           0               0                        0
        0           1               1                        0
        1           0               1                        1
        1           1               0                        0
         */
        if (profile.isEnabled()) {
            changePanel(MainFrame.getProfilePanel());
            MainFrame.profile.setEnabled(false);
            MainFrame.newTransaction.setEnabled((userAccess ^ isAdmin) && userAccess);
            MainFrame.orders.setEnabled(userAccess);
            MainFrame.about.setEnabled(true);
        }
    }//GEN-LAST:event_profileMouseClicked

    private void closeSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeSessionActionPerformed
        // Cierra sesión
        Profile.closeSession();
    }//GEN-LAST:event_closeSessionActionPerformed

    private void ordersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ordersMouseClicked
        // Desactivamos este menú y activamos los demás (menos login)
        if (orders.isEnabled()) {
            changePanel(MainFrame.getOrdersPanel());
            MainFrame.orders.setEnabled(false);
            MainFrame.newTransaction.setEnabled((userAccess ^ isAdmin) && userAccess);
            MainFrame.profile.setEnabled(userAccess);
            MainFrame.about.setEnabled(true);
            Orders.init();
        }
    }//GEN-LAST:event_ordersMouseClicked

    private void newTransactionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newTransactionMouseClicked
        // Desactivamos este menú y activamos los demás (menos login)
        if (newTransaction.isEnabled()) {
            changePanel(MainFrame.getNewTransactionPanel());
            MainFrame.newTransaction.setEnabled(false);
            MainFrame.orders.setEnabled(userAccess);
            MainFrame.profile.setEnabled(userAccess);
            MainFrame.about.setEnabled(true);
            NewTransaction.init();
        }
    }//GEN-LAST:event_newTransactionMouseClicked

    public void resetMenu() {
        // Resetea los botones del menú
        MainFrame.login.setEnabled(false);
        MainFrame.orders.setEnabled(false);
        MainFrame.newTransaction.setEnabled(false);
        MainFrame.profile.setEnabled(false);
        MainFrame.about.setEnabled(true);
    }

    // </editor-fold>
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                mainFrame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JMenu about;
    private javax.swing.JMenuItem closeSession;
    public static javax.swing.JMenu login;
    private javax.swing.JMenuBar menuBar;
    public static javax.swing.JMenu newTransaction;
    public static javax.swing.JMenu orders;
    public static javax.swing.JMenu profile;
    // End of variables declaration//GEN-END:variables
}
